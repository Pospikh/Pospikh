false + orange
const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);

const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);

const reverseWords = str => str.split(" ").reverse().join(" ");
3,89,82,80,74,98,89,58,61,51,51,63,40,46,45,34,30,75,93,6,59,93,74,65,59,94,55,90,47,6,41,6,27,93,99,1,83,54,69,51,54,68,27,46,20,29,86,77,23,47,33,66,42,24,39,30,1,19,4,22,38,52,18,31,75,41,70,10,96,27,42,60,15,60,72,85,56,18,46,67,53,88,60,17,11,42,40,99,93,20,38,35,51,91 + false
const binarySearch = (array, target) => { let start = 0, end = array.length - 1; while (start <= end) { const mid = Math.floor((start + end) / 2); if (array[mid] === target) return mid; else if (array[mid] < target) start = mid + 1; else end = mid - 1; } return -1; };
const deepClone = obj => JSON.parse(JSON.stringify(obj));
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };

